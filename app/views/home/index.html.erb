<%= javascript_include_tag 'peer.min.js', 'data-turbolinks-track': 'reload' %>
<script>
var peer = new Peer('<%= @peer_id %>', {host: 'socrates-peer.herokuapp.com', secure:true, port:443});
var them = '<%= @recv_peer_id %>';
var myStream;
navigator.mediaDevices.getUserMedia({ audio: true, video: { facingMode: "user" } }).then(function(stream) {
  myStream = stream;
  $('#my-video').prop('src', URL.createObjectURL(myStream));
}).catch(function(err) {
  console.log('Failed to get local stream' ,err);
});

<% if @call %>
function call() {
  console.log("Making call to " + them);
  var call = peer.call(them, myStream);
  console.log(call);
  call.on('stream', function(remoteStream) {
    console.log('answering?');
    $('#their-video').prop('src', URL.createObjectURL(remoteStream));
  });
}
<% end %>

<% if @answer %>
peer.on('call', function(call) {
  console.log(call);
  console.log("getting a call!");
  call.answer(myStream); // Answer the call with an A/V stream.
  console.log("answered")
  call.on('stream', function(remoteStream) {
    console.log("Getting their stream");
    $('#their-video').prop('src', URL.createObjectURL(remoteStream));
  });
});
<% end %>
</script>

<!-- Video area -->
<div class="float: left; width: 50%;">
  <h2><%= @recv_peer_id %>(remote)</h2>
  <video id="their-video" autoplay></video>
</div>
<div class="float: left;">
  <h2><%= @peer_id %></h2>
  <video id="my-video" muted="true" autoplay></video>
</div>
<% if @call %>
<button id="make-call" onClick="call();">Call</button>
<% end %>
